<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.dili</groupId>
	<artifactId>ping-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>ping-server</name>
	<description>ping服务</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<!--  MyBatis Generator  -->
		<!--  Java接口和实体类  -->
		<targetJavaProject>${basedir}/src/main/java</targetJavaProject>
		<targetMapperPackage>com.dili.ping.server.dao</targetMapperPackage>
		<targetModelPackage>com.dili.ping.server.domain</targetModelPackage>
		<targetServicePackage>com.dili.ping.server.service</targetServicePackage>
		<!--  XML生成路径  -->
		<targetResourcesProject>${basedir}/src/main/resources</targetResourcesProject>
		<targetXMLPackage>mapper</targetXMLPackage>
		<!--  依赖版本  -->
		<spring.version>4.2.8.RELEASE</spring.version>
        <mybatis.version>3.3.0</mybatis.version>
        <mybatis-spring.version>1.2.3</mybatis-spring.version>
        <springloaded.version>1.2.6.RELEASE</springloaded.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.framework.version>1.0-SNAPSHOT</project.framework.version>
        <mapper.version>3.3.9</mapper.version>
        <mysql.version>5.1.38</mysql.version>
        <aspectj.version>1.8.10</aspectj.version>
	</properties>

	<modules>
		<module>ping-server-web</module>
	</modules>
	
	<!--地利-->
	<distributionManagement>
        <repository>
            <id>central</id>
            <name>Artifactory Release Repository</name>
            <url>
                http://mvn2.diligrp.com/artifactory/libs-release-local
            </url>
        </repository>
        <snapshotRepository>
            <id>central</id>
            <name>Artifactory Snapshot Repository</name>
            <url>
                http://mvn2.diligrp.com/artifactory/libs-snapshot-local
            </url>
        </snapshotRepository>
    </distributionManagement>

	<dependencies>
		<!-- 编译用的包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.23</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<!-- 编译用的包 end -->
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>

			<properties>
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>test</build.profile.id>
			</properties>
		</profile>
	</profiles>

	<build>
		<!--<filters>-->
			<!--<filter>application-${build.profile.id}.properties</filter>-->
		<!--</filters>-->

		<!-- 资源过滤 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!-- 编译JDK版本 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.4.3.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Boot 1.3.x and Spring Framework 4.2.x support -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>